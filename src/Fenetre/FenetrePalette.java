/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fenetre;

import static Fenetre.FenetrePrincipale.*;
import java.awt.Color;
import java.awt.image.BufferedImage;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Pierre
 */
public class FenetrePalette extends javax.swing.JFrame implements ChangeListener {

    FenetrePrincipale fp; 
    
    /**
     * Creates new form FenetrePalette
     */
    public FenetrePalette() {
        initComponents();
    }
    
    public FenetrePalette(FenetrePrincipale f) {
        initComponents();
        fp = f; 
        ColorChoice.getSelectionModel().addChangeListener(this);
        BufferedImage img = copyImage(fp.bimgSrc); 
        ImageIcon imageIcon = new ImageIcon(img);
        fp.ImageDst.setIcon(imageIcon); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ColorChoice = new javax.swing.JColorChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Color Choice");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ColorChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ColorChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // r√©active les boutons de la fentre principale 
        fp.enableAll(true); 
    }//GEN-LAST:event_formWindowClosing

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetrePalette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetrePalette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetrePalette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetrePalette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetrePalette().setVisible(true);
            }
        });
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        Color newColor = ColorChoice.getColor();
        setColor(newColor); 
    }
    
    public void setColor(Color cl)
    {        
        BufferedImage img = copyImage(fp.bimgSrc);
        int pixel;
        int r, g, b, a;
        int newR, newG, newB, newA;

        newR = cl.getRed();
        newG = cl.getGreen();
        newB = cl.getBlue();
        newA = cl.getAlpha();
        
        for(int i = 0; i < img.getWidth() ;i++)
        {
            for(int j = 0; j < img.getHeight() ; j++)
            {
                pixel = img.getRGB(i, j);
               
                a = (pixel>>24)&0xff;     
                r = (pixel>>16)&0xff; 
                g = (pixel>>8)&0xff; 
                b = pixel&0xff; 
                
                a += newA;
                if(a > 255)
                    a = 255;
                if(a < 0)
                    a = 0;
                
                r += newR;
                if(r > 255)
                    r = 255;
                if(r < 0)
                    r = 0;
                
                g += newG;
                if(g > 255)
                    g = 255;
                if(g < 0)
                    g = 0;
                
                b += newB;
                if(b > 255)
                    b = 255;
                if(b < 0)
                    b = 0;
                
                pixel = (a<<24) | (r<<16) | (g<<8) | b; 
                img.setRGB(i, j, pixel); 
            }
        }
        Icon ico = new ImageIcon(img);
        fp.ImageDst.setIcon(ico); 
        
        fp.updateHistogram(fp.histoImg2, fp.ImageDst); 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JColorChooser ColorChoice;
    // End of variables declaration//GEN-END:variables
}